# Form implementation generated from reading ui file '.\mainWindow.ui'
#
# Created by: PyQt6 UI code generator 6.1.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

"""

Author: Maksymilian Górski
https://github.com/MaxWarman/caesarCipherDecryptor

"""

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import QThread
from caesarCipher import CaesarCipher
from time import time, sleep

from random import randint

class Ui_MainWindow(object):

    def __init__(self):
        self.cc = None
        self.lastBestDecryption = ""

        self.useLastBestDecrypton = False
        self.decryptionStartTime = 0
        self.decryptionEndTime = 0

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(846, 245)
        MainWindow.setMinimumSize(QtCore.QSize(846, 245))
        MainWindow.setMaximumSize(QtCore.QSize(846, 245))
        MainWindow.setLocale(QtCore.QLocale(QtCore.QLocale.Language.English, QtCore.QLocale.Country.UnitedStates))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.plainTextEdit_InputText = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_InputText.setGeometry(QtCore.QRect(10, 30, 371, 141))
        self.plainTextEdit_InputText.setPlainText("")
        self.plainTextEdit_InputText.setObjectName("plainTextEdit_InputText")
        self.plainTextEdit_OutputText = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_OutputText.setGeometry(QtCore.QRect(470, 30, 371, 141))
        self.plainTextEdit_OutputText.setReadOnly(True)
        self.plainTextEdit_OutputText.setPlainText("")
        self.plainTextEdit_OutputText.setObjectName("plainTextEdit_OutputText")
        self.label_InputText = QtWidgets.QLabel(self.centralwidget)
        self.label_InputText.setGeometry(QtCore.QRect(10, 10, 50, 16))
        self.label_InputText.setObjectName("label_InputText")
        self.label_OutputText = QtWidgets.QLabel(self.centralwidget)
        self.label_OutputText.setGeometry(QtCore.QRect(470, 10, 63, 16))
        self.label_OutputText.setObjectName("label_OutputText")
        self.spinBox_Key = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox_Key.setGeometry(QtCore.QRect(400, 30, 51, 22))
        self.spinBox_Key.setAcceptDrops(False)
        self.spinBox_Key.setMaximum(25)
        self.spinBox_Key.setStepType(QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.spinBox_Key.setObjectName("spinBox_Key")
        self.label_Key = QtWidgets.QLabel(self.centralwidget)
        self.label_Key.setGeometry(QtCore.QRect(398, 10, 51, 20))
        self.label_Key.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_Key.setObjectName("label_Key")
        self.pushButton_Decrypt = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Decrypt.setGeometry(QtCore.QRect(390, 80, 71, 41))
        self.pushButton_Decrypt.setObjectName("pushButton_Decrypt")
        self.label_Footnote = QtWidgets.QLabel(self.centralwidget)
        self.label_Footnote.setGeometry(QtCore.QRect(10, 180, 171, 16))
        self.label_Footnote.setObjectName("label_Footnote")
        self.pushButton_OutputToInput = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_OutputToInput.setGeometry(QtCore.QRect(390, 130, 71, 41))
        self.pushButton_OutputToInput.setObjectName("pushButton_OutputToInput")
        self.spinBox_Percentage = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox_Percentage.setGeometry(QtCore.QRect(520, 180, 51, 22))
        self.spinBox_Percentage.setAcceptDrops(False)
        self.spinBox_Percentage.setMinimum(10)
        self.spinBox_Percentage.setMaximum(100)
        self.spinBox_Percentage.setSingleStep(10)
        self.spinBox_Percentage.setStepType(QtWidgets.QAbstractSpinBox.StepType.DefaultStepType)
        self.spinBox_Percentage.setProperty("value", 60)
        self.spinBox_Percentage.setObjectName("spinBox_Percentage")
        self.label_PercentageOfWords = QtWidgets.QLabel(self.centralwidget)
        self.label_PercentageOfWords.setGeometry(QtCore.QRect(270, 180, 251, 20))
        self.label_PercentageOfWords.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_PercentageOfWords.setObjectName("label_PercentageOfWords")
        self.label_PercentSign = QtWidgets.QLabel(self.centralwidget)
        self.label_PercentSign.setGeometry(QtCore.QRect(570, 180, 21, 20))
        self.label_PercentSign.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_PercentSign.setObjectName("label_PercentSign")
        self.label_LetterShift = QtWidgets.QLabel(self.centralwidget)
        self.label_LetterShift.setGeometry(QtCore.QRect(400, 50, 51, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_LetterShift.setFont(font)
        self.label_LetterShift.setText("")
        self.label_LetterShift.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_LetterShift.setObjectName("label_LetterShift")
        self.label_LastDecryptionTime = QtWidgets.QLabel(self.centralwidget)
        self.label_LastDecryptionTime.setGeometry(QtCore.QRect(630, 180, 121, 20))
        self.label_LastDecryptionTime.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_LastDecryptionTime.setObjectName("label_LastDecryptionTime")
        self.label_LastDecryptionTimeValue = QtWidgets.QLabel(self.centralwidget)
        self.label_LastDecryptionTimeValue.setGeometry(QtCore.QRect(760, 180, 51, 20))
        self.label_LastDecryptionTimeValue.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_LastDecryptionTimeValue.setObjectName("label_LastDecryptionTimeValue")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 846, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Initialize and set values of required parameters
        self.cc = CaesarCipher(self.plainTextEdit_InputText.toPlainText(), self.spinBox_Key.value())
        shiftChar = chr(ord("A") + self.cc.getKey())
        self.label_LetterShift.setText(f"A -> {shiftChar}")
        self.label_LastDecryptionTimeValue.setText(f"0.000 [s]")

        # GUI <-> Model communication
        self.plainTextEdit_InputText.textChanged.connect(self.updateInputText)
        self.spinBox_Key.valueChanged.connect(self.updateKey)
        self.spinBox_Percentage.valueChanged.connect(self.updatePercentage)
        self.pushButton_Decrypt.clicked.connect(self.decryptClicked)
        self.pushButton_OutputToInput.clicked.connect(self.outputToInputClicked)
    
    def updateInputText(self):
        self.cc.setInputText(self.plainTextEdit_InputText.toPlainText())
        newOutput = self.cc.shift()
        self.plainTextEdit_OutputText.setPlainText(newOutput)
        self.useLastBestDecrypton = False

    def updateKey(self):
        self.cc.setKey(self.spinBox_Key.value())
        shiftChar = chr(ord("A") + self.cc.getKey())
        self.label_LetterShift.setText(f"A -> {shiftChar}")
        newOutput = self.cc.shift()
        self.plainTextEdit_OutputText.setPlainText(newOutput)
        self.useLastBestDecrypton = False

    def updatePercentage(self):
        self.cc.setPercentageToCheck(self.spinBox_Percentage.value())

    def decryptClicked(self):
        if self.plainTextEdit_InputText.toPlainText() == "":
            self.plainTextEdit_OutputText.setPlainText("No input given!")
            return
        
        self.pushButton_Decrypt.setEnabled(False)

        self.decryptionStartTime = time()

        self.thread = MyThread(self.plainTextEdit_InputText.toPlainText(), self.spinBox_Percentage.value())
        self.thread.start()
        self.thread.any_signal.connect(self.fillDecryptionOutput)

    def fillDecryptionOutput(self, resultTuple):
        resultTxt = resultTuple[0]
        self.plainTextEdit_OutputText.setPlainText(resultTxt)
        
        self.decryptionEndTime = time()
        self.label_LastDecryptionTimeValue.setText(f"{self.decryptionEndTime - self.decryptionStartTime:.3f} [s]")

        self.thread.stop()

        self.decryptionStartTime = 0
        self.decryptionEndTime = 0

        self.useLastBestDecrypton = True
        self.lastBestDecryption = resultTuple[1]

        self.pushButton_Decrypt.setEnabled(True)

    def outputToInputClicked(self):
        textToPaste = ""
        if self.useLastBestDecrypton:
            textToPaste = self.lastBestDecryption
        else:
            textToPaste = self.plainTextEdit_OutputText.toPlainText()
            
        self.plainTextEdit_InputText.setPlainText(textToPaste)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Caesar Cipher"))
        self.label_InputText.setText(_translate("MainWindow", "Input text"))
        self.label_OutputText.setText(_translate("MainWindow", "Output Text"))
        self.label_Key.setText(_translate("MainWindow", "Key"))
        self.pushButton_Decrypt.setText(_translate("MainWindow", "Decrypt"))
        self.label_Footnote.setText(_translate("MainWindow", "© Maksymilian Górski 259396"))
        self.pushButton_OutputToInput.setText(_translate("MainWindow", "<-----"))
        self.label_PercentageOfWords.setText(_translate("MainWindow", "Percentage of words to check in dictionary:"))
        self.label_PercentSign.setText(_translate("MainWindow", "%"))
        self.label_LastDecryptionTime.setText(_translate("MainWindow", "Last decryption time:"))
        self.label_LastDecryptionTimeValue.setText(_translate("MainWindow", "key"))

class MyThread(QThread):

    any_signal = QtCore.pyqtSignal(tuple)

    def __init__(self, inputText_="", percentage_=100, parent=None):
        super(MyThread, self).__init__(parent)
        self.decryptor = CaesarCipher(inputText_, 0, "dict.txt", 3, percentage_)

    def run(self):
        resultTuple = self.decryptor.findBestDecryption()
        self.any_signal.emit(resultTuple)

    def stop(self):
        self.terminate()



if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())